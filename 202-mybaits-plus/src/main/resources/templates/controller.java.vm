package ${package.Controller};
import  ${package.Service}.${table.serviceName};
import  ${package.Entity}.${table.entityName};


import java.lang.Integer;
import java.lang.Boolean;
import java.util.List;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.api.ApiController;
import com.baomidou.mybatisplus.extension.api.R;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;


#set ($serviceImplName=$table.serviceName.substring(0,1).toLowerCase()+$table.serviceName.substring(1))
#set ($entityName=$table.entityName.substring(0,1).toLowerCase()+$table.entityName.substring(1))

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};import javax.validation.Valid;
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} ${serviceImplName};

    /**
     * 新增数据
     * @param ${entityName} 实体对象
     * @return 新增结果
    */
    @PostMapping
    public R<Boolean> add(@Valid @RequestBody ${entity} ${entityName}) {
        return success(${serviceImplName}.save(${entityName}));
    }

   /**
    * 分页查询所有数据
    *
    * @param page 分页对象
    * @param ${entityName} 实体对象
    * @return 所有数据
    */
    @GetMapping
    public  R<Page<${entity}>> getByPage(Page< ${entity}> page, ${entity} ${entityName}) {
        return success(this.${serviceImplName}.page(page, new QueryWrapper<>(${entityName})));
    }


    /**
    * 通过主键查询单条数据
    *
    * @param id 主键
    * @return 单条数据
    */
    @GetMapping("{id}")
    public R<${entity}> getById(@PathVariable Integer id) {
        return success(this.${serviceImplName}.getById(id));
    }

   /**
    * 修改数据
    *
    * @param {entityName} 实体对象
    * @return 修改结果
    */
    @PutMapping
    public R<Boolean> update(@RequestBody ${entity}  ${entityName}) {
        return success(this.${serviceImplName}.updateById(${entityName}));
    }


    /**
    * 删除数据
    *
    * @param idList 主键结合
    * @return 删除结果
    */
    @DeleteMapping
    public R<Boolean> delete(@RequestParam("idList") List<Integer> idList) {
        return success(this.${serviceImplName}.removeByIds(idList));
    }

#end

}
